install.packages("ggplot2")
install.packages("dplyr
")
install.packages("dplyr")
data("mtcars")
glimpse(mtcars)
??glimpse
install.packages("tibble")
librqry(dplyr)
library(dplyr)
glimpse(mtcars)
ggplot(mtcars,aes(cyl,mpg,color=carb)) +
geom_smooth()
library(ggplot2)
ggplot(mtcars,aes(cyl,mpg,color=carb)) +
geom_smooth()
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
library(nycflights13)
data(nycflights13)
install.packages("nycflights13")
library(nycflights13)
weather
glimpse(airport)
glimpse(airports)
glimpse(weather)
airports %>%
group_by(name) %>%
summarize(n = n()) %>%
arrange(desc(n))
airports %>%
left_join(flights,by="origin") %>%
group_by(name) %>%
summarize(n = n()) %>%
arrange(desc(n))
airports
airports %>%
left_join(flights,by=c("name"="origin")) %>%
group_by(name) %>%
summarize(n = n()) %>%
arrange(desc(n))
airports %>%
left_join(flights,by=c("name"="origin"))
airports %>%
right_join(flights,by=c("name"="origin")) %>%
group_by(name) %>%
summarize(n = n()) %>%
arrange(desc(n))
flights
airports %>%
right_join(flights,by=c("name"="origin"))
colnames(flights)
airports %>%
inner_join(flights,by=c("name"="origin")) %>%
group_by(name) %>%
summarize(n = n()) %>%
arrange(desc(n))
airports %>%
inner_join(flights,by=c("name"="origin"))
flights
airports
airports %>%
inner_join(flights,by=c("faa"="origin")) %>%
group_by(name) %>%
summarize(n = n()) %>%
arrange(desc(n))
airports %>%
left_join(flights,by=c("faa"="origin")) %>%
group_by(name) %>%
summarize(n = n()) %>%
arrange(desc(n))
airports %>%
right_join(flights,by=c("faa"="origin")) %>%
group_by(name) %>%
summarize(n = n()) %>%
arrange(desc(n))
flights <- flights %>%
nutate(rownum = row_number())
flights <- flights %>%
mutate(rownum = row_number())
glimpse(flights)
Lahman::Batting
install.packages("Lahman")
library(Lahman)
??Lahman
# Identify the kets in Lahman Batting
LahmanData
# Identify the kets in Lahman Batting
Lahman::Batting %>%
count() %>%
filter(n>1)
Lahman::Batting %>%
count()
colnames(batting)
colnames(lahman::batting)
colnames(Lahman::Batting)
?dplyr::count
# Identify the kets in Lahman Batting
Lahman::Batting %>%
group_by_all() %>%
count() %>%
filter(n>1)
Lahman::Batting %>%
group_by_all() %>%
count()
# Identify the kets in Lahman Batting
Lahman::Batting %>%
group_by_all() %>%
count() %>%
filter(n>1)
babynames::babynames
install.packages("baybnames")
install.packages("babynames")
babynames::babynames %>%
group_by_all() %>%
count() %>%
filter(n>1)
colnames(babynames::babynames)
babynames
babynames::babynames
library(extrafonts)
library(extrafont)
install.packages("extrafont")
library(extrafont)
font_import() # import all your fonts
y
font_import() # import all your fonts
fonts()
fonttable()
check <- fonttable()
View(check)
font_import() # import all your fonts
# Identify the kets in Lahman Batting
Lahman::Batting %>%
group_by_all() %>%
count() %>%
filter(n>1)
data(mtcars)
library(ggplot2)
mtcars %>%
ggplot(aes(cyl,mpg)) +
geom_line()
library(dplyr)
mtcars %>%
ggplot(aes(cyl,mpg)) +
geom_line()
mtcars %>%
ggplot(aes(cyl,mpg)) +
geom_boxplot()
mtcars %>%
ggplot(aes(cyl,mpg)) +
geom_density()
mtcars %>%
ggplot(aes(cyl,mpg)) +
geom_line()
mtcars %>%
ggplot(aes(cyl,mpg)) +
geom_line() +
theme(text=element_text(family="Roboto Classic"))
mtcars %>%
ggplot(aes(cyl,mpg)) +
geom_line() +
theme(text=element_text(family="Roboto Regular"))
warnings()
fonttable()
View(check)
check <- fonttable()
View(check)
mtcars %>%
ggplot(aes(cyl,mpg)) +
geom_line() +
theme(text=element_text(family="Roboto-Regular"))
mtcars %>%
ggplot(aes(cyl,mpg)) +
geom_line() +
theme(text=element_text(family="Roboto"))
mtcars %>%
ggplot(aes(cyl,mpg)) +
geom_line() +
theme(text=element_text(family="Roboto"))
fonts()
font_import(paths = "C:/Users/arnop/Documents/R/fonts/")
fonts
fonts()
mtcars %>%
ggplot(aes(cyl,mpg)) +
geom_line() +
theme(text=element_text(family="Roboto"))
fonttable()
check <- fonttable()
View(check)
mtcars %>%
ggplot(aes(cyl,mpg)) +
geom_line() +
theme(text=element_text(family="Roboto"))
library(tidyverse)
library(ggplot2)
library(nycflights13)
library(dplyr)
mtcars %>%
ggplot(aes(cyl,mpg)) +
geom_line() +
theme(text=element_text(family="Roboto"))
?windowsFonts
?dplyr::group_by
cars <- read.csv("cars.csv") %>%
mutate(active_from = lubridate::ymd_hms(active_from),
active_until = lubridate::ymd_hms(active_until))
require(tidyverse)
require(tidyverse)
require(DBI)
cars <- read.csv("cars.csv") %>%
mutate(active_from = lubridate::ymd_hms(active_from),
active_until = lubridate::ymd_hms(active_until))
occupations <- read.csv("occupations.csv") %>%
mutate(active_from = lubridate::ymd_hms(active_from),
active_until = lubridate::ymd_hms(active_until))
View(cars)
View(occupations)
db = dbConnect(RSQLite::SQLite(), dbname = "sql.sqlite")
rs <- dbSendQuery(db, "SELECT * FROM cars")
dbFetch(rs)
rs <- dbSendQuery(db, "SELECT User, datetime(active_from, 'unixepoch') AS from, datetime(active_until, 'unixepoch') AS until")
rs <- dbSendQuery(db, "SELECT User, datetime(active_from, 'unixepoch') AS from, datetime(active_until, 'unixepoch') AS until")
rs <- dbSendQuery(db, "SELECT User, datetime(active_from, 'unixepoch') AS from, datetime(active_until, 'unixepoch') AS until FROM cars")
rs <- dbSendQuery(db, "SELECT User, datetime(active_from, 'unixepoch') AS state_from, datetime(active_until, 'unixepoch') AS state_until FROM cars")
dbFetch(rs)
View(db)
cars
dbWriteTable(db, "cars", cars)
dbRemoveTable(db, cars)
dbRemoveTable(rs, cars)
dbClearResult(res)
dbClearResult(db)
rs <- dbSendQuery(db, "SELECT User, datetime(active_from, 'unixepoch') AS state_from, datetime(active_until, 'unixepoch') AS state_until FROM cars")
dbFetch(rs)
rm(db)
dm(rs)
rm(rs)
cars <- read.csv("site/arno12.github.io/R Markdown posts/cars.csv")
occupations <- read.csv("site/arno12.github.io/R Markdown posts/occupations.csv")
View(cars)
View(occupations)
setwd("~/site/arno12.github.io/R Markdown posts/")
occupations <- read.csv("occupations.csv") %>%
mutate(active_from = lubridate::dmy_hms(active_from),
active_until = lubridate::dmy_hms(active_until)) %>%
write.csv("occupations.csv", row.names = F)
occupations <- read.csv("occupations.csv")
View(occupations)
View(cars)
View(occupations)
View(cars)
?dbConnect
rs <- dbSendQuery(db, "SELECT User, datetime(active_from, 'unixepoch') AS state_from, datetime(active_until, 'unixepoch') AS state_until FROM cars")
dbFetch(rs)
db = dbConnect(RSQLite::SQLite(), dbname = "sql.sqlite")
rs <- dbSendQuery(db, "SELECT User, datetime(active_from, 'unixepoch') AS state_from, datetime(active_until, 'unixepoch') AS state_until FROM cars")
dbFetch(rs)
rs <- dbSendQuery(db, "SELECT User, datetime(active_from, 'unixepoch') AS state_from, datetime(active_until, 'unixepoch') AS state_until, car FROM cars")
dbFetch(rs)
cars <- read.csv("site/arno12.github.io/R Markdown posts/cars.csv")
occupations <- read.csv("site/arno12.github.io/R Markdown posts/occupations.csv")
View(cars)
View(cars)
dbWriteTable(db, "cars", cars)
RSQLite::dbDisconnect(db)
require(DBI)
db = dbConnect(RSQLite::SQLite(), dbname = ":memory:")
dbWriteTable(db, "cars", cars)
dbWriteTable(db, "occupations", occupations)
occupations <- read.csv("occupations.csv") %>%
mutate(active_from = lubridate::dmy_hms(active_from),
active_until = lubridate::dmy_hms(active_until)) %>%
write.csv("occupations.csv", row.names = F)
db = dbConnect(RSQLite::SQLite(), dbname = ":memory:")
dbWriteTable(db, "cars", cars)
dbWriteTable(db, "occupations", occupations)
dput(cars)
?dput
R.version
reprod_cars <- dput(cars)
reprod_cars
dput(cars)
?pprint
??pprint
